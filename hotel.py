# -*- coding: utf-8 -*-
"""hotel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-0ScEiG3DnelV9LF8TlXu5kn4wl-RJCT
"""

!pip install chart_studio

import math
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use("seaborn") 
sns.set(font_scale = 1)
sns.set_style("whitegrid")

import plotly.express as px

import chart_studio.plotly as py
import cufflinks as cf
cf.go_offline(connected=True)

import plotly.graph_objects as go
import plotly.offline as pyo
pyo.init_notebook_mode()

from plotly.subplots import make_subplots

import missingno as msno

import warnings # 경고 메세지 숨기기
warnings.filterwarnings(action='ignore')

# plt.rc("font", family = "AppleGothic") # 한글 폰트 가져오기(Mac)
plt.rcParams['font.family'] = 'S-Core Dream'# 한글 폰트 가져오기(Win)

plt.rcParams['axes.unicode_minus'] = False # - 기호 깨짐 해결

from google.colab import files
hotel = files.upload()

import math
import numpy as np
import pandas as pd
import io

hotel = pd.read_csv(io.BytesIO(hotel['hotel_bookings.csv']))
hotel

hotel.info()

hotel.describe()

hotel.describe(include = np.object_)

hotel.isnull().sum()

msno.bar(hotel)

hotel["children"].value_counts()

hotel["children"] = hotel["children"].fillna(0)

hotel["children"].isnull().sum()

print("country 컬럼에 결측치가 있는 index 비중: {:.2f}%".format(len(hotel[hotel["country"].isnull()]) / len(hotel["country"]) * 100))

hotel = hotel.dropna(subset = ["country"])

hotel["country"].isnull().sum()

hotel["agent"] = hotel["agent"].fillna("Unknown")

hotel["agent"].isnull().sum()

print("company 컬럼에 결측치가 있는 index 비중: {:.2f}%".format(len(hotel[hotel["company"].isnull()]) / len(hotel) * 100))

hotel = hotel.drop("company", axis = 1)

hotel.columns

color_1 = px.colors.qualitative.Vivid
color_2 = px.colors.qualitative.Pastel

hotel["hotel"].value_counts()

hotel["hotel"].value_counts().iplot(kind = "bar",
                                         layout = dict(
                                             title = dict(
                                                 text = "<b>호텔 종류별 수</b>",
                                                 font_size = 20),
                                             template = "plotly_white")
                                        )

hotel["is_canceled"].value_counts()

fig = px.pie(labels = hotel["is_canceled"].value_counts().index,
             values = hotel["is_canceled"].value_counts().values,
             names = ["No", "Yes"])
             

fig.update_traces(
    textinfo = "label + percent + value",
    textfont_size = 15,
    textfont_color = "white"
)

fig.update_layout(
    title = dict(
        text = "<b>전체 호텔 예약 취소 비율</b>",
        font_size = 20
    )
)

fig.show()

city_Hotel = hotel[hotel["hotel"] == "City Hotel"]
resort_Hotel = hotel[hotel["hotel"] == "Resort Hotel"]

fig = make_subplots(rows = 1, cols = 2, specs = [[{"type" : "pie"}, {"type" : "pie"}]])

fig.add_trace(
    go.Pie(labels = ["No", "Yes"],
           values = city_Hotel["is_canceled"].value_counts().values),
    row = 1, col = 1
)

fig.add_trace(
    go.Pie(labels = ["No", "Yes"],
           values = resort_Hotel["is_canceled"].value_counts().values),
    row = 1, col = 2
)

fig.update_traces(
    textinfo = "label + percent + value",
    textfont_size = 15,
    textfont_color = "white",
    hole = .4
)

fig.update_layout(
    title = dict(
        text = "<b>호텔 종류별 예약 취소 비율</b>",
        font_size = 20
    ),
    
    showlegend = False,
    
    # 파이 차트 가운데 글씨 넣기
    annotations = [dict(text = "City Hotel",
                        x = 0.175,
                        y = 0.505,
                        font_size = 15,
                        showarrow = False),
                   dict(text = "Resort Hotel",
                        x = 0.84,
                        y = 0.5,
                        font_size = 15,
                        showarrow = False)]
)

fig.show()

hotel["lead_time"].iplot(kind = "box",
                         layout = dict(
                             title = dict(
                                 text = "<b>전체 예약 고객의 리드 타임 분포</b>",
                                 font_size = 20),
                             template = "plotly_white")
                        )

fig = px.histogram(hotel[hotel["lead_time"] < 200], x = "lead_time", color = "is_canceled")

fig.update_layout(
    title = dict(
        text = "<b>리드 타임과 예약 취소의 관계</b>",
        font_size = 20
    ),
    
    legend = dict(
        title = "0:예약, 1:예약취소"
    ),
    
    template = "plotly_white"
)

fig.show()

hotel_booked = hotel[hotel["is_canceled"] == 0]

fig = make_subplots(rows = 3, cols = 1)

fig.add_trace(
    go.Bar(x = hotel_booked["arrival_date_year"].value_counts().index,
           y = hotel_booked["arrival_date_year"].value_counts().values,
           marker_color = color_1),
    row = 1, col = 1
)

fig.add_trace(
    go.Bar(x = hotel_booked["arrival_date_month"].value_counts().index,
           y = hotel_booked["arrival_date_month"].value_counts().values,
           marker_color = hotel_booked["arrival_date_month"].value_counts().values),
    row = 2, col = 1
)

fig.add_trace(
    go.Bar(x = hotel_booked["arrival_date_day_of_month"].value_counts().index,
           y = hotel_booked["arrival_date_day_of_month"].value_counts().values,
           marker_color = hotel_booked["arrival_date_day_of_month"].value_counts().values),
    row = 3, col = 1
)

fig.update_xaxes(title = "연도", dtick = 1, row = 1, col = 1)
fig.update_xaxes(title = "월", row = 2, col = 1)
fig.update_xaxes(title = "일", dtick = 1, row = 3, col = 1)

fig.update_layout(
    height = 1000,    
    title = dict(
        text = "<b>연도별/월별/일별 호텔 방문 현황</b>",
        font_size = 20
    ),
    showlegend = False,
    template = "plotly_white"    
)

fig.show()

hotel_canceled = hotel[hotel["is_canceled"] == 1]

fig = make_subplots(rows = 3, cols = 1)

fig.add_trace(
    go.Bar(x = hotel_canceled["arrival_date_year"].value_counts().index,
           y = hotel_canceled["arrival_date_year"].value_counts().values,
           marker_color = color_1),
    row = 1, col = 1
)

fig.add_trace(
    go.Bar(x = hotel_canceled["arrival_date_month"].value_counts().index,
           y = hotel_canceled["arrival_date_month"].value_counts().values,
           marker_color = hotel_canceled["arrival_date_month"].value_counts().values),
    row = 2, col = 1
)

fig.add_trace(
    go.Bar(x = hotel_canceled["arrival_date_day_of_month"].value_counts().index,
           y = hotel_canceled["arrival_date_day_of_month"].value_counts().values,
           marker_color = hotel_canceled["arrival_date_day_of_month"].value_counts().values),
    row = 3, col = 1
)

fig.update_xaxes(title = "연도", dtick = 1, row = 1, col = 1)
fig.update_xaxes(title = "월", row = 2, col = 1)
fig.update_xaxes(title = "일", dtick = 1, row = 3, col = 1)

fig.update_layout(
    height = 1000,    
    title = dict(
        text = "<b>연도별/월별/일별 호텔 예약 취소 고객</b>",
        font_size = 20
    ),
    showlegend = False,
    template = "plotly_white"    
)

fig.show()

hotel_booked["stays_in_total"] = hotel_booked["stays_in_weekend_nights"] + hotel_booked["stays_in_week_nights"]

hotel_booked["stays_in_total"].head()

hotel_stays = hotel_booked.groupby(["hotel","stays_in_total"]).agg({"lead_time" : "count"}).reset_index()
hotel_stays = hotel_stays.rename(columns = {"lead_time" : "count"})
hotel_stays = hotel_stays[hotel_stays["stays_in_total"] <= 31] # 1달이 최대 31일이므로, 31일 이내의 데이터만 추출

fig = px.bar(hotel_stays, x = "stays_in_total", y = "count",
             color = "hotel", barmode = "group")

fig.update_layout(
    title = dict(
        text = "<b>호텔 종류별 숙박일</b>",
        font_size = 20
    ),
    xaxis = dict(
        title = "총 숙박일",
        dtick = 1
    ),
    legend = dict(title = "호텔 종류"),
    template = "plotly_white"
)

fig.show()

hotel_booked["family"] = hotel_booked["adults"] + hotel_booked["children"] + hotel_booked["babies"]

hotel_booked["family"].head()

hotel_family = hotel_booked.groupby(["hotel","family"]).agg({"lead_time" : "count"}).reset_index()
hotel_family = hotel_family.rename(columns = {"lead_time" : "count"})

fig = px.bar(hotel_family, x = "family", y = "count",
             color = "hotel", barmode = "group")

fig.update_layout(
    title = dict(
        text = "<b>호텔 종류별 가족 수</b>",
        font_size = 20
    ),
    xaxis = dict(
        title = "가족 수",
        dtick = 1
    ),
    legend = dict(title = "호텔 종류"),
    template = "plotly_white"
)

fig.show()

hotel["meal"].value_counts()

fig = px.pie(labels = hotel["meal"].value_counts().index,
             values = hotel["meal"].value_counts().values,
             names = hotel["meal"].value_counts().index)

fig.update_traces(
    textinfo = "label + percent",
    textposition = "auto",
    textfont_size = 15,
    textfont_color = "black"
)

fig.update_layout(
    title = dict(
        text = "<b>호텔 식사 종류별 예약 비율</b>",
        font_size = 20
    ),
    showlegend = False    
)

fig.show()

top10 = hotel_booked["country"].value_counts().nlargest(10).index
hotel_booked_top10 = hotel_booked[hotel_booked["country"].isin(top10)]

hotel_booked_top10["country"].unique()

hotel_booked_country_top10 = hotel_booked_top10.groupby(["country", "hotel"]).agg({"is_canceled" : "count"}).reset_index()
hotel_booked_country_top10 = hotel_booked_country_top10.rename(columns = {"is_canceled" : "count"})

fig = px.bar(hotel_booked_country_top10, x = "country", y = "count", color = "hotel",
            barmode = "group")

fig.update_xaxes(
    categoryorder = "array",
    categoryarray = hotel_booked["country"].value_counts().index,
    title = "국가명"
)

fig.update_layout(
    title = dict(
        text = "<b>가장 많이 호텔에 방문하는 국가 Top10</b>",
        font_size = 20
    ),
    legend = dict(title = "호텔 종류"),
    template = "plotly_white"
)

fig.show()

top10 = hotel_canceled["country"].value_counts().nlargest(10).index
hotel_canceled_top10 = hotel_canceled[hotel_canceled["country"].isin(top10)]

hotel_canceled_top10["country"].unique()

hotel_canceled_country_top10 = hotel_canceled_top10.groupby(["country", "hotel"]).agg({"is_canceled" : "count"}).reset_index()
hotel_canceled_country_top10 = hotel_canceled_country_top10.rename(columns = {"is_canceled" : "count"})

fig = px.bar(hotel_canceled_country_top10, x = "country", y = "count", color = "hotel",
            barmode = "group")

fig.update_xaxes(
    categoryorder = "array",
    categoryarray = hotel_canceled["country"].value_counts().index,
    title = "국가명"
)

fig.update_layout(
    title = dict(
        text = "<b>가장 많이 예약 취소하는 국가 Top10</b>",
        font_size = 20
    ),
    legend = dict(title = "호텔 종류"),
    template = "plotly_white"
)

fig.show()

